#include <iostream>
#include <string.h>
#include <stdio.h>
using namespace std;
long long mod=1000000007ll;
const int MAXN=1000000;
bool check[MAXN+100];
int prime[MAXN+10];
int mu[MAXN+10];
void Moblus(){
	memset(check,false,sizeof(check));
	mu[1]=1;
	int tot=0;
	for(int i=2;i<=MAXN;i++){
		if(!check[i]){
			prime[tot++]=i;
			mu[i]=-1;
		}
		for(int j=0;j<tot;j++){
			if(i*prime[j]>MAXN) break;
			check[i*prime[j]]=true;
			if(i%prime[j]==0){
				mu[i*prime[j]]=0;
				break;
			}
			else{
				mu[i*prime[j]]=-mu[i];
			}
		}
	}
}
int sum[MAXN+10];
long long my[MAXN+10];
long long solve(int n){
	if(my[n]) return my[n];
	long long ans=0;
	int m=n;
	for(int i=1,la=0;i<=n;i=la+1){
		la=min(n/(n/i),m/(m/i));
		ans+=(long long) (sum[la]-sum[i-1])*(n/i)*(m/i);
		ans%=mod;
	}
	return my[n]=ans;
}

int main(){
	int T,x,n;
	scanf("%d",&T);
	Moblus();
	sum[0]=0;
	memset(my,0,sizeof(my));
	for(int i=1;i<=MAXN;i++)
		sum[i]=sum[i-1]+mu[i];
	while(T--){
		scanf("%d%d",&x,&n);
		long long ans=0,tmp=1,sum=1,test=0;
		for(int i=1;i<=n;i++){
			long long num=solve(n/i);
			ans+=tmp*num%mod;
			ans%=mod;
			sum=sum*x%mod;
			tmp=tmp+sum;
			tmp%=mod;
		}
		ans=ans*(x-1);
		ans%=mod;
		printf("%lld\n",ans);
	}
}
